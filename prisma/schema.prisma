generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id                 String        @id @default(cuid())
  name               String
  email              String        @unique
  isAccountConfirmed Boolean       @default(false)
  password           String
  role               String
  tokens             Float         @default(0)
  subscription       Subscription?
  createdAt          DateTime      @default(now()) @map("created_at")
  updatedAt          DateTime      @updatedAt @map("updated_at")
  guest              Guest?        @relation("Guest")
  guests             Guest[]       @relation("Owner")
  invites            Invite[]      @relation("Owner")

  @@index([email])
  @@map("users")
}

model Invite {
  id        String   @id @default(cuid())
  expiresAt DateTime @map("expires_at")
  status    String
  ownerId   String   @map("owner_id")
  owner     User     @relation("Owner", fields: [ownerId], references: [id], onDelete: Cascade)
  guest     Guest?   @relation(fields: [guestId], references: [id])
  guestId   String?  @unique @map("guest_id")
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([ownerId])
  @@map("invites")
}

model Guest {
  id        String   @id @default(cuid())
  user      User     @relation("Guest", fields: [userId], references: [id], onDelete: Cascade)
  userId    String   @unique @map("user_id")
  owner     User     @relation("Owner", fields: [ownerId], references: [id], onDelete: Cascade)
  ownerId   String   @map("owner_id")
  invite    Invite?
  createdAt DateTime @default(now()) @map("created_at")
  updatedAt DateTime @updatedAt @map("updated_at")

  @@index([userId, ownerId])
  @@map("guests")
}

model Subscription {
  id                   String   @id @default(cuid())
  vendorSubscriptionId String   @map("vendor_subscription_id")
  vendorCustomerId     String   @unique @map("vendor_customer_id")
  vendorProductId      String   @map("vendor_product_id")
  user                 User     @relation(fields: [userId], references: [id], onDelete: Cascade)
  userId               String   @unique @map("user_id")
  status               String
  createdAt            DateTime @default(now()) @map("created_at")
  updatedAt            DateTime @updatedAt @map("updated_at")

  @@index([userId, vendorSubscriptionId, vendorProductId])
  @@map("subscriptions")
}
